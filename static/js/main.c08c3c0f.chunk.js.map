{"version":3,"sources":["components/result.tsx","components/space.tsx","utilities/board.ts","components/chess-board.tsx","components/results.tsx","components/instruction.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Result","correct","space","time","Object","classCallCheck","this","Space","file","rank","color","_this","sameAs","asString","concat","FILES","i","flipped","index","Math","floor","randomSpace","random","ChessBoard","props","possibleConstructorReturn","getPrototypeOf","call","flipBoard","setState","state","board","createBoard","arguments","length","undefined","Array","fill","map","_space","createSpace","onClickSpace","chooseSpace","toggleLabels","labels","_this2","highlighted","_this$state","react_default","a","createElement","className","_r","r","key","_f","f","get","onClick","Component","Instruction","results","result","App","now","moment","newHighlight","Map","set","timeLastAssigned","diff","toConsumableArray","instruction","chess_board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c08c3c0f.chunk.js","sourcesContent":["import Space from \"./space\";\n\nclass Result {\n  time: number;\n  correct: boolean;\n  space: Space;\n\n  constructor(correct: boolean, space: Space, time: number) {\n    this.correct = correct;\n    this.space = space;\n    this.time = time;\n  }\n}\n\nexport default Result;\n","class Space {\n  rank: number;\n  file: string;\n  color: string;\n\n  constructor(file: string, rank: number, color: string) {\n    this.file = file;\n    this.rank = rank;\n    this.color = color;\n  }\n\n  sameAs = (space: Space | null): boolean => {\n    if (space === null) {\n      return false;\n    }\n    return space.rank === this.rank && space.file === this.file;\n  };\n\n  asString = () => `${this.file}${this.rank}`;\n}\n\nexport default Space;\n","import Space from \"../components/space\";\n\nconst BOARD_SIZE = 8;\nconst FILES = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\n\nconst file = (i: number, flipped: boolean): string => {\n  let index = i % BOARD_SIZE;\n  if (flipped) {\n    index = 7 - index;\n  }\n  return FILES[index];\n};\n\nconst rank = (i: number, flipped: boolean): number => {\n  if (flipped) {\n    return Math.floor(i / BOARD_SIZE) + 1;\n  } else {\n    return BOARD_SIZE - Math.floor(i / BOARD_SIZE);\n  }\n};\n\nconst color = (i: number, flipped: boolean): string => {\n  if (rank(i, false) % 2 === 0) {\n    return i % 2 === 0 ? \"white\" : \"black\";\n  } else {\n    return i % 2 === 0 ? \"black\" : \"white\";\n  }\n};\n\nconst randomSpace = (): Space => {\n  const i = Math.floor(Math.random() * 64);\n  return new Space(file(i, false), rank(i, false), color(i, false));\n};\n\nexport { color, file, rank, randomSpace };\n","import React, { Component } from \"react\";\n\nimport { color, file, rank } from \"../utilities/board\";\nimport Space from \"./space\";\n\nclass ChessBoard extends Component<\n  {\n    chooseSpace: (space: Space) => void;\n    highlighted: Map<string, string>;\n  },\n  { board: Array<Space>; flipped: boolean; labels: boolean }\n> {\n  constructor(props: {\n    chooseSpace: (space: Space) => void;\n    highlighted: Map<string, string>;\n  }) {\n    super(props);\n    this.state = {\n      board: this.createBoard(),\n      flipped: false,\n      labels: false\n    };\n  }\n\n  render() {\n    const { highlighted } = this.props;\n    const { board, labels } = this.state;\n    return (\n      <div>\n        <div className=\"board\">\n          {new Array(8).fill(undefined).map((_r, r) => {\n            return (\n              <div className=\"rank\" key={r}>\n                {new Array(8).fill(undefined).map((_f, f) => {\n                  const space = board[r * 8 + f];\n                  return (\n                    <div\n                      className={`space ${space.color} ${highlighted.get(\n                        space.asString()\n                      ) || \"\"}`}\n                      key={f}\n                      onClick={() => this.onClickSpace(space)}\n                    >\n                      {labels ? space.asString() : \"\"}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"controls\">\n          <button onClick={this.flipBoard}>Flip Board</button>\n          <button onClick={this.toggleLabels}>Toggle Labels</button>\n        </div>\n      </div>\n    );\n  }\n\n  flipBoard = () => {\n    this.setState({\n      flipped: !this.state.flipped,\n      board: this.createBoard(!this.state.flipped)\n    });\n  };\n\n  createBoard = (flipped: boolean = false): Array<Space> => {\n    return new Array(64)\n      .fill(undefined)\n      .map((_space, i) => this.createSpace(i, flipped));\n  };\n\n  createSpace = (i: number, flipped: boolean): Space => {\n    return new Space(file(i, flipped), rank(i, flipped), color(i, flipped));\n  };\n\n  onClickSpace = (space: Space) => {\n    this.props.chooseSpace(space);\n  };\n\n  toggleLabels = () => {\n    this.setState({ labels: !this.state.labels });\n  };\n}\n\nexport default ChessBoard;\n","import React, { Component } from \"react\";\nimport Result from \"../components/result\";\n\nclass Instruction extends Component<{ results: Array<Result> }, {}> {\n  render() {\n    return (\n      <table className=\"results\">\n        <tbody>\n          <tr className=\"result\">\n            <th>Space</th>\n            <th>Time</th>\n            <th>Result</th>\n          </tr>\n          {this.props.results.map(result => (\n            <tr className=\"result\">\n              <td>\n                {result.space.file}\n                {result.space.rank}\n              </td>\n              <td>{result.time}</td>\n              <td>{result.correct ? \"Correct\" : \"Wrong\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default Instruction;\n","import React, { Component } from \"react\";\nimport Space from \"../components/space\";\n\nclass Instruction extends Component<{ space: Space }, {}> {\n  render() {\n    return (\n      <div className=\"instruction\">\n        {this.props.space.file}\n        {this.props.space.rank}\n      </div>\n    );\n  }\n}\n\nexport default Instruction;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport \"./App.css\";\n\nimport Space from \"./components/space\";\nimport Result from \"./components/result\";\nimport ChessBoard from \"./components/chess-board\";\nimport Results from \"./components/results\";\nimport Instruction from \"./components/instruction\";\nimport { randomSpace } from \"./utilities/board\";\n\nclass App extends Component<\n  {},\n  {\n    highlighted: Map<string, string>;\n    results: Array<Result>;\n    space: Space;\n    timeLastAssigned: moment.Moment;\n  }\n> {\n  constructor(props: Object) {\n    super(props);\n\n    this.state = {\n      highlighted: new Map(),\n      results: [],\n      space: randomSpace(),\n      timeLastAssigned: moment()\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"left\">\n          <Instruction space={this.state.space} />\n          <ChessBoard\n            highlighted={this.state.highlighted}\n            chooseSpace={this.chooseSpace}\n          />\n        </div>\n        <div className=\"right\">\n          <Results results={this.state.results} />\n        </div>\n      </div>\n    );\n  }\n\n  chooseSpace = (space: Space) => {\n    const result = space.sameAs(this.state.space);\n    const now = moment();\n    const newHighlight = new Map();\n    newHighlight.set(this.state.space.asString(), result ? \"green\" : \"red\");\n    this.setState({\n      highlighted: newHighlight,\n      timeLastAssigned: now,\n      results: [\n        new Result(\n          result,\n          this.state.space,\n          now.diff(this.state.timeLastAssigned) / 1000.0\n        ),\n        ...this.state.results\n      ],\n      space: randomSpace()\n    });\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}